version: "3.6"
services:
  app:
    build:
      context: containers/filebeat
      dockerfile: Dockerfile
    volumes:
      - ./containers/filebeat:/app
    ports:
      - 127.0.0.1:5044:5044
    depends_on:
      - redis
    networks:
      - esnet

  curator:
    build:
      context: containers/curator
      dockerfile: Dockerfile
    container_name: curator
    environment:
      ELASTICSEARCH_HOST: elasticsearch01
      ELASTICSEARCH_PORT: 9200
    networks:
      - esnet

  redis:
    build:
      context: containers/redis
      dockerfile: Dockerfile
    ports:
      - 127.0.0.1:6379:6379
    networks:
      - esnet

#  postgres:
#    image: "postgres:11.6"
#    ports:
#      - 127.0.0.1:5432:5432
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      PGDATA: /var/lib/postgresql/data/pgdata
#    restart: always
#    volumes:
#      - pgdata:/var/lib/postgresql/data

  logindexer:
    build:
      context: containers/logindexer
      dockerfile: Dockerfile
    ports:
      - 127.0.0.1:9600:9600
    depends_on:
      - elasticsearch01
      - elasticsearch02
    networks:
      - esnet

  elasticsearch01:
    build:
      context: containers/elasticsearch01
      dockerfile: Dockerfile
    container_name: elasticsearch01
    volumes:
      - esdata1:/usr/share/elasticsearch/data
      - esrepo:/usr/share/elasticsearch/repos
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      # - discovery.type=single-node
      # - http.cors.enabled=true
      # - http.cors.allow-origin=*
      - cluster.routing.allocation.disk.threshold_enabled=false
      - cluster.routing.allocation.awareness.attributes=zone
      - cluster.routing.allocation.awareness.force.zone.values=zone1,zone2
      - path.data=/usr/share/elasticsearch/data
      - path.repo=/usr/share/elasticsearch/repos
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - esnet

  elasticsearch02:
    build:
      context: containers/elasticsearch02
      dockerfile: Dockerfile
    container_name: elasticsearch02
    volumes:
      - esdata2:/usr/share/elasticsearch/data
      - esrepo:/usr/share/elasticsearch/repos
    ports:
      - 127.0.0.1:9201:9200
      - 127.0.0.1:9301:9300
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      # - http.cors.enabled=true
      # - http.cors.allow-origin=*
      - cluster.routing.allocation.disk.threshold_enabled=false
      - cluster.routing.allocation.awareness.attributes=zone
      - cluster.routing.allocation.awareness.force.zone.values=zone1,zone2
      - path.data=/usr/share/elasticsearch/data
      - path.repo=/usr/share/elasticsearch/repos
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - esnet

  elasticsearch03:
    build:
      context: containers/elasticsearch03
      dockerfile: Dockerfile
    container_name: elasticsearch03
    volumes:
      - esdata3:/usr/share/elasticsearch/data
      - esrepo:/usr/share/elasticsearch/repos
    ports:
      - 127.0.0.1:9202:9200
      - 127.0.0.1:9302:9300
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      # - http.cors.enabled=true
      # - http.cors.allow-origin=*
      - cluster.routing.allocation.disk.threshold_enabled=false
      - cluster.routing.allocation.awareness.attributes=zone
      - cluster.routing.allocation.awareness.force.zone.values=zone1,zone2
      - path.data=/usr/share/elasticsearch/data
      - path.repo=/usr/share/elasticsearch/repos
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - esnet

  metricbeat:
    build:
      context: containers/metricbeat
      dockerfile: Dockerfile
    depends_on:
      - redis
    networks:
      - esnet

  cerebro:
    build:
      context: containers/cerebro
      dockerfile: Dockerfile
    container_name: cerebro
    ports:
      - 127.0.0.1:9000:9000
    networks:
      - esnet

  kibana:
    build:
      context: containers/kibana
      dockerfile: Dockerfile
    container_name: kibana
    ports:
      - 127.0.0.1:5601:5601
    environment:
      - SERVER_NAME=kibana.local
      - ELASTICSEARCH_URL=http://elasticsearch01:9200
    depends_on:
      - elasticsearch01
    networks:
      - esnet

volumes:
  pgdata:
  esdata1:
    driver: local
  esdata2:
    driver: local
  esdata3:
    driver: local
  esrepo:
    driver: local

networks:
  esnet: